<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TTA Player</title>

  <link rel="shortcut icon" href="../../static/images/thumb.png">
    
  <!-- Styles -->
  <link rel="stylesheet" href="../../static/css/fonts.css">
  <link rel="stylesheet" href="../../static/css/brix-family.css">

  <link rel="stylesheet" href="../../static/css/colors.css">

  <link rel="stylesheet" href="/users/tuition/tuition.css">

</head>
<body>

  <!-- TITLES -->
  <div class="title-box">
    <% if (videoData) { %>
      <h1><%= videoData.lessonTitle %></h1>
      <h2><%= videoData.lesson %></h2>
    <% } %>
  </div>

  <!-- PLAYER -->
  <div class="player-box">
    <div id="player"></div>
  </div>

  <!-- TEST -->
  <div class="test-box">
    <% if (videoData) { %>
      <% videoData.questions.map(question => { %>
        <h3><%= question.question %></h3>
        <% question.answers.map((answer, index) => { %>

          <label for="Q<%= question.id %>A<%= index %>">
            <input type="radio" name="Q<%= question.id %>" id="Q<%= question.id %>A<%= index %>" />
            <%= answer %>
          </label>

        <% }) %>

      <% }) %>
    <% } %>
  </div>

  <script>
    const tag = document.createElement('script')
    tag.src = "https://www.youtube.com/iframe_api"

    const firstScriptTag = document.getElementsByTagName('script')[0]
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)
   
    let player;

    const playerOptions = {
      videoId: '<%= video %>',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      },
      playerVars: {
        autoplay: 1,
        controls: 0,
        disablekb: 1,
        fs: 0,
        iv_load_policy: 3,
        modestbranding: 1,
        playsinline: 1,
        rel: 0,
        showinfo: 0,
        start: 0    //   here last viewed second can be start from
      }
    }


    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', playerOptions)
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    let done = false;
    function onPlayerStateChange(event) {
      if (event.data == YT.PlayerState.PLAYING && !done) {
        // setTimeout(stopVideo, 6000);
        done = true;
      }
    }
    function stopVideo() {
      player.stopVideo();
    }
  </script>

</body>
</html>


